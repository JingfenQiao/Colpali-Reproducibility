Fetching 30 files:   0%|          | 0/30 [00:00<?, ?it/s]Fetching 30 files: 100%|██████████| 30/30 [00:00<00:00, 10061.50it/s]
01/02/2025 04:27:10 PM - WARNING - py.warnings:109 - /ivi/ilps/personal/jqiao/anaconda3/envs/colpali/lib/python3.10/site-packages/FlagEmbedding/BGE_M3/modeling.py:335: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  colbert_state_dict = torch.load(os.path.join(model_dir, 'colbert_linear.pt'), map_location='cpu')

01/02/2025 04:27:10 PM - WARNING - py.warnings:109 - /ivi/ilps/personal/jqiao/anaconda3/envs/colpali/lib/python3.10/site-packages/FlagEmbedding/BGE_M3/modeling.py:336: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sparse_state_dict = torch.load(os.path.join(model_dir, 'sparse_linear.pt'), map_location='cpu')

01/02/2025 04:27:29 PM - WARNING - py.warnings:109 - /ivi/ilps/personal/jqiao/colpali/vidore-benchmark/src/vidore_benchmark/main.py:237: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  indexing = torch.load(indexing_path)["embeddings"]

Loading datasets from the Hf Hub collection: vidore/vidore-page-ocr-artifact-6669de61f09324d7d940dd53

 ---------------------------
Loading passages and index

 ---------------------------
Evaluating vidore/arxivqa_test_subsampled_tesseract
Forwarding query batches:   0%|          | 0/63 [00:00<?, ?it/s]Forwarding query batches:   2%|▏         | 1/63 [00:00<00:14,  4.27it/s]Forwarding query batches:  13%|█▎        | 8/63 [00:00<00:01, 28.29it/s]Forwarding query batches:  25%|██▌       | 16/63 [00:00<00:01, 44.05it/s]Forwarding query batches:  38%|███▊      | 24/63 [00:00<00:00, 53.35it/s]Forwarding query batches:  51%|█████     | 32/63 [00:00<00:00, 59.15it/s]Forwarding query batches:  62%|██████▏   | 39/63 [00:00<00:00, 62.26it/s]Forwarding query batches:  73%|███████▎  | 46/63 [00:00<00:00, 64.39it/s]Forwarding query batches:  84%|████████▍ | 53/63 [00:00<00:00, 66.04it/s]Forwarding query batches:  95%|█████████▌| 60/63 [00:01<00:00, 67.08it/s]                                                                         Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/arxivqa_test_subsampled_tesseract: 0.26058
query_metrics saved to `outputs/BAAI_bge-m3/vidore_arxivqa_test_subsampled_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_arxivqa_test_subsampled_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_arxivqa_test_subsampled_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/docvqa_test_subsampled_tesseract
Forwarding query batches:   0%|          | 0/57 [00:00<?, ?it/s]Forwarding query batches:  12%|█▏        | 7/57 [00:00<00:00, 65.98it/s]Forwarding query batches:  26%|██▋       | 15/57 [00:00<00:00, 71.29it/s]Forwarding query batches:  40%|████      | 23/57 [00:00<00:00, 73.60it/s]Forwarding query batches:  54%|█████▍    | 31/57 [00:00<00:00, 74.24it/s]Forwarding query batches:  68%|██████▊   | 39/57 [00:00<00:00, 74.53it/s]Forwarding query batches:  82%|████████▏ | 47/57 [00:00<00:00, 74.35it/s]Forwarding query batches:  96%|█████████▋| 55/57 [00:00<00:00, 75.15it/s]                                                                         Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/docvqa_test_subsampled_tesseract: 0.29796
query_metrics saved to `outputs/BAAI_bge-m3/vidore_docvqa_test_subsampled_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_docvqa_test_subsampled_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_docvqa_test_subsampled_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/infovqa_test_subsampled_tesseract
Forwarding query batches:   0%|          | 0/62 [00:00<?, ?it/s]Forwarding query batches:  11%|█▏        | 7/62 [00:00<00:00, 67.42it/s]Forwarding query batches:  24%|██▍       | 15/62 [00:00<00:00, 72.83it/s]Forwarding query batches:  37%|███▋      | 23/62 [00:00<00:00, 73.75it/s]Forwarding query batches:  50%|█████     | 31/62 [00:00<00:00, 72.97it/s]Forwarding query batches:  63%|██████▎   | 39/62 [00:00<00:00, 73.84it/s]Forwarding query batches:  76%|███████▌  | 47/62 [00:00<00:00, 74.65it/s]Forwarding query batches:  89%|████████▊ | 55/62 [00:00<00:00, 74.82it/s]                                                                         Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/infovqa_test_subsampled_tesseract: 0.61739
query_metrics saved to `outputs/BAAI_bge-m3/vidore_infovqa_test_subsampled_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_infovqa_test_subsampled_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_infovqa_test_subsampled_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/tabfquad_test_subsampled_tesseract
Forwarding query batches:   0%|          | 0/35 [00:00<?, ?it/s]Forwarding query batches:  20%|██        | 7/35 [00:00<00:00, 63.18it/s]Forwarding query batches:  43%|████▎     | 15/35 [00:00<00:00, 69.71it/s]Forwarding query batches:  66%|██████▌   | 23/35 [00:00<00:00, 71.23it/s]Forwarding query batches:  89%|████████▊ | 31/35 [00:00<00:00, 72.53it/s]                                                                         Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/tabfquad_test_subsampled_tesseract: 0.76814
query_metrics saved to `outputs/BAAI_bge-m3/vidore_tabfquad_test_subsampled_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_tabfquad_test_subsampled_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_tabfquad_test_subsampled_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/tatdqa_test_tesseract
Forwarding query batches:   0%|          | 0/206 [00:00<?, ?it/s]Forwarding query batches:   3%|▎         | 7/206 [00:00<00:02, 67.33it/s]Forwarding query batches:   7%|▋         | 15/206 [00:00<00:02, 72.31it/s]Forwarding query batches:  11%|█         | 23/206 [00:00<00:02, 73.67it/s]Forwarding query batches:  15%|█▌        | 31/206 [00:00<00:02, 74.16it/s]Forwarding query batches:  19%|█▉        | 39/206 [00:00<00:02, 74.54it/s]Forwarding query batches:  23%|██▎       | 47/206 [00:00<00:02, 74.86it/s]Forwarding query batches:  27%|██▋       | 55/206 [00:00<00:01, 75.56it/s]Forwarding query batches:  31%|███       | 63/206 [00:00<00:01, 75.49it/s]Forwarding query batches:  34%|███▍      | 71/206 [00:00<00:01, 74.93it/s]Forwarding query batches:  38%|███▊      | 79/206 [00:01<00:01, 75.59it/s]Forwarding query batches:  42%|████▏     | 87/206 [00:01<00:01, 75.85it/s]Forwarding query batches:  46%|████▌     | 95/206 [00:01<00:01, 76.04it/s]Forwarding query batches:  50%|█████     | 103/206 [00:01<00:01, 76.15it/s]Forwarding query batches:  54%|█████▍    | 111/206 [00:01<00:01, 76.13it/s]Forwarding query batches:  58%|█████▊    | 119/206 [00:01<00:01, 76.34it/s]Forwarding query batches:  62%|██████▏   | 127/206 [00:01<00:01, 76.38it/s]Forwarding query batches:  66%|██████▌   | 135/206 [00:01<00:00, 76.83it/s]Forwarding query batches:  69%|██████▉   | 143/206 [00:01<00:00, 76.30it/s]Forwarding query batches:  73%|███████▎  | 151/206 [00:01<00:00, 76.41it/s]Forwarding query batches:  77%|███████▋  | 159/206 [00:02<00:00, 75.64it/s]Forwarding query batches:  81%|████████  | 167/206 [00:02<00:00, 76.01it/s]Forwarding query batches:  85%|████████▍ | 175/206 [00:02<00:00, 76.15it/s]Forwarding query batches:  89%|████████▉ | 183/206 [00:02<00:00, 75.72it/s]Forwarding query batches:  93%|█████████▎| 191/206 [00:02<00:00, 76.00it/s]Forwarding query batches:  97%|█████████▋| 199/206 [00:02<00:00, 76.29it/s]                                                                           Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/tatdqa_test_tesseract: 0.40194
query_metrics saved to `outputs/BAAI_bge-m3/vidore_tatdqa_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_tatdqa_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_tatdqa_test_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/shiftproject_test_tesseract
Forwarding query batches:   0%|          | 0/13 [00:00<?, ?it/s]Forwarding query batches:  54%|█████▍    | 7/13 [00:00<00:00, 66.35it/s]                                                                        Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/shiftproject_test_tesseract: 0.70284
query_metrics saved to `outputs/BAAI_bge-m3/vidore_shiftproject_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_shiftproject_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_shiftproject_test_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/syntheticDocQA_artificial_intelligence_test_tesseract
Forwarding query batches:   0%|          | 0/13 [00:00<?, ?it/s]Forwarding query batches:  54%|█████▍    | 7/13 [00:00<00:00, 67.24it/s]                                                                        Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/syntheticDocQA_artificial_intelligence_test_tesseract: 0.91917
query_metrics saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_artificial_intelligence_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_artificial_intelligence_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_artificial_intelligence_test_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/syntheticDocQA_energy_test_tesseract
Forwarding query batches:   0%|          | 0/13 [00:00<?, ?it/s]Forwarding query batches:  54%|█████▍    | 7/13 [00:00<00:00, 66.87it/s]                                                                        Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/syntheticDocQA_energy_test_tesseract: 0.84964
query_metrics saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_energy_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_energy_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_energy_test_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/syntheticDocQA_government_reports_test_tesseract
Forwarding query batches:   0%|          | 0/13 [00:00<?, ?it/s]Forwarding query batches:  54%|█████▍    | 7/13 [00:00<00:00, 65.96it/s]                                                                        Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/syntheticDocQA_government_reports_test_tesseract: 0.86531
query_metrics saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_government_reports_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_government_reports_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_government_reports_test_tesseract_metrics.json`

 ---------------------------
Evaluating vidore/syntheticDocQA_healthcare_industry_test_tesseract
Forwarding query batches:   0%|          | 0/13 [00:00<?, ?it/s]Forwarding query batches:  54%|█████▍    | 7/13 [00:00<00:00, 66.77it/s]                                                                        Get the similarity scores
Get the relevant passages and results
nDCG@5 for BAAI_bge-m3 on vidore/syntheticDocQA_healthcare_industry_test_tesseract: 0.87365
query_metrics saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_healthcare_industry_test_tesseract_query_metrics.json`
run_results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_healthcare_industry_test_tesseract_run_results.json`
Benchmark results saved to `outputs/BAAI_bge-m3/vidore_syntheticDocQA_healthcare_industry_test_tesseract_metrics.json`
Concatenated metrics saved to `outputs/BAAI_bge-m3_all_metrics.json`
Done.
